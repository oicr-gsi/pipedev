<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>ca.on.oicr.gsi</groupId>
        <artifactId>pipedev</artifactId>
        <version>2.5.17-SNAPSHOT</version>
        <relativePath>../../pom.xml</relativePath>
    </parent>

    <groupId>ca.on.oicr.gsi</groupId>
    <artifactId>pipedev-niassa-cromwell-parent</artifactId>
    <packaging>pom</packaging>


    <profiles>
        <profile>
            <id>install-parent-pom</id>
            <activation>
                <file>
                    <exists>.install_parent_pom</exists>
                </file>
            </activation>
        </profile>

        <profile>
            <id>build-workflow</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>

            <properties>
                <maven.compiler.source>1.8</maven.compiler.source>
                <maven.compiler.target>1.8</maven.compiler.target>

                <jre-version>1.8.0_45</jre-version>

                <display-name>workflow_${workflow-name}</display-name>

                <skipITs>true</skipITs>
                <skipWorkflowRunITs>false</skipWorkflowRunITs>

                <!--legacy-property-->
                <workflow-directory-name>${workflow-name}</workflow-directory-name>

                <!-- default testng test suite -->
                <testSuite>${project.build.directory}/test-classes/test-suite.xml</testSuite>

                <!-- properties used by tests -->
                <schedulingSystem>oozie</schedulingSystem>
                <seqwareDistribution>${bundleDirectory}/lib/seqware-distribution-${seqware-version}-full.jar
                </seqwareDistribution>
                <workingDirectory>${user.home}/_testing/</workingDirectory>
                <bundleDirectory>${project.build.directory}/Workflow_Bundle_${workflow-name}_${project.version}_SeqWare_${seqware-version}/Workflow_Bundle_${workflow-name}/${project.version}</bundleDirectory>
                <run-test-threads>10</run-test-threads>
                <test-definition-file>${project.build.directory}/test-classes/${test-definition}</test-definition-file>
                <cromwell-host></cromwell-host>

                <workflow-name>${project.artifactId}</workflow-name>
                <workflow-description>Niassa workflow to run WDL workflows in Cromwell</workflow-description>
                <wdl-url>file://${workflow_bundle_dir}/Workflow_Bundle_${workflow-name}/${project.version}/lib/${wdl-workflow}</wdl-url>

                <!-- test configuration -->
                <test-basedir>${project.basedir}</test-basedir>
                <test-definition>tests.json</test-definition>
                <calculate-metrics-script>calculate.sh</calculate-metrics-script>
                <compare-metrics-script>compare.sh</compare-metrics-script>
            </properties>

            <dependencies>
                <dependency>
                    <groupId>com.github.seqware</groupId>
                    <artifactId>seqware-pipeline</artifactId>
                    <scope>provided</scope>
                </dependency>
                <dependency>
                    <groupId>com.github.seqware</groupId>
                    <artifactId>seqware-common</artifactId>
                    <scope>provided</scope>
                </dependency>
                <dependency>
                    <groupId>ca.on.oicr.gsi</groupId>
                    <artifactId>pipedev-workflow-utils</artifactId>
                </dependency>

                <!-- test dependencies -->
                <dependency>
                    <groupId>ca.on.oicr.gsi</groupId>
                    <artifactId>pipedev-test-utils</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.testng</groupId>
                    <artifactId>testng</artifactId>
                    <scope>test</scope>
                </dependency>

                <dependency>
                    <groupId>ca.on.oicr.gsi</groupId>
                    <artifactId>pipedev-niassa-cromwell-workflow</artifactId>
                </dependency>
                <dependency>
                    <groupId>ca.on.oicr.gsi</groupId>
                    <artifactId>pipedev-niassa-cromwell-workflow</artifactId>
                    <classifier>tests</classifier>
                    <type>test-jar</type>
                    <scope>test</scope>
                </dependency>

            </dependencies>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <configuration>
                            <encoding>UTF-8</encoding>
                        </configuration>
                        <executions>
                            <execution>
                                <id>copy-resources-no-filter</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${bundleDirectory}</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.build.directory}/workflow</directory>
                                            <excludes>
                                                <exclude>config/*</exclude>
                                                <exclude>metadata.xml</exclude>
                                            </excludes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-resources-and-filter</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${bundleDirectory}</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.build.directory}/workflow</directory>
                                            <includes>
                                                <include>config/*</include>
                                                <include>metadata.xml</include>
                                            </includes>
                                            <filtering>true</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-classes</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${bundleDirectory}/classes</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.build.directory}/classes</directory>
                                            <includes>
                                                <include>**/*</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-wdl-workflow</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${bundleDirectory}/lib/</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.basedir}</directory>
                                            <includes>
                                                <include>${wdl-workflow}</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-test-resources-with-filtering</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/test-classes/</outputDirectory>
                                    <resources>
                                        <resource>
                                            <filtering>true</filtering>
                                            <directory>${test-basedir}</directory>
                                            <includes>
                                                <include>${test-definition}</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-test-resources-without-filtering</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/test-classes/</outputDirectory>
                                    <resources>
                                        <resource>
                                            <filtering>false</filtering>
                                            <directory>${test-basedir}</directory>
                                            <includes>
                                                <include>${calculate-metrics-script}</include>
                                                <include>${compare-metrics-script}</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-and-filter-test-resources</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/test-classes/</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.build.directory}/test-resources/</directory>
                                            <includes>
                                                <include>test-suite.xml</include>
                                            </includes>
                                            <filtering>true</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-and-no-filter-test-resources</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/test-classes/</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.build.directory}/test-resources/</directory>
                                            <includes>
                                                <include>**</include>
                                            </includes>
                                            <excludes>
                                                <exclude>test-suite.xml</exclude>
                                            </excludes>
                                            <filtering>false</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>3.1.1</version>
                        <executions>
                            <execution>
                                <id>copy-seqware-distribution</id>
                                <phase>process-sources</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <stripVersion>false</stripVersion>
                                    <useBaseVersion>true</useBaseVersion>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>com.github.seqware</groupId>
                                            <artifactId>seqware-distribution</artifactId>
                                            <classifier>full</classifier>
                                            <overWrite>true</overWrite>
                                            <outputDirectory>${bundleDirectory}/lib</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                            <execution>
                                <id>unpack-common-dependencies</id>
                                <phase>process-sources</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>io.seqware</groupId>
                                            <artifactId>seqware-bin-linux-x86-64-jre-8.0.45</artifactId>
                                            <version>1.0.0</version>
                                            <overWrite>true</overWrite>
                                            <outputDirectory>${bundleDirectory}/bin</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                            <execution>
                                <id>unpack-runtime-dependencies</id>
                                <phase>process-sources</phase>
                                <goals>
                                    <goal>unpack-dependencies</goal>
                                </goals>
                                <configuration>

                                    <outputDirectory>${bundleDirectory}/classes</outputDirectory>
                                    <overWriteReleases>false</overWriteReleases>
                                    <overWriteSnapshots>true</overWriteSnapshots>
                                    <includeScope>compile</includeScope>
                                    <!--only include runtime and compile scope jar dependencies-->
                                    <includeScope>runtime</includeScope>
                                    <includeTypes>jar</includeTypes>
                                    <excludeArtifactIds>pipedev-niassa-cromwell-workflow</excludeArtifactIds>
                                </configuration>
                            </execution>
                            <execution>
                                <id>unpack-niassa-cromwell-workflow-classes</id>
                                <phase>process-sources</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>ca.on.oicr.gsi</groupId>
                                            <artifactId>pipedev-niassa-cromwell-workflow</artifactId>
                                            <type>jar</type>
                                            <outputDirectory>${bundleDirectory}/classes</outputDirectory>
                                            <includes>**/*</includes>
                                            <excludes>workflow/</excludes>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                            <execution>
                                <id>unpack-niassa-cromwell-workflow-resources</id>
                                <phase>process-sources</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>ca.on.oicr.gsi</groupId>
                                            <artifactId>pipedev-niassa-cromwell-workflow</artifactId>
                                            <type>jar</type>
                                            <includes>workflow/</includes>
                                            <outputDirectory>${project.build.directory}</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                            <execution>
                                <id>unpack-niassa-cromwell-workflow-test-resources</id>
                                <phase>process-sources</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>ca.on.oicr.gsi</groupId>
                                            <artifactId>pipedev-niassa-cromwell-workflow</artifactId>
                                            <classifier>tests</classifier>
                                            <type>test-jar</type>
                                            <includes>calculate.sh,compare.sh,test-suite.xml</includes>
                                            <outputDirectory>${project.build.directory}/test-resources/</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                            <execution>
                                <id>unpack-provided-dependencies</id>
                                <phase>process-sources</phase>
                                <goals>
                                    <goal>unpack-dependencies</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${bundleDirectory}/bin</outputDirectory>
                                    <overWriteReleases>false</overWriteReleases>
                                    <overWriteSnapshots>true</overWriteSnapshots>
                                    <includeTypes>zip,tar.gz,gz</includeTypes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables>
                                <bundleDirectory>${bundleDirectory}</bundleDirectory>
                                <bundledBinPath>${bundleDirectory}/bin/</bundledBinPath>
                                <testDefinitionFile>${test-definition-file}</testDefinitionFile>
                            </systemPropertyVariables>
                            <dependenciesToScan>
                                <dependency>ca.on.oicr.gsi:pipedev-niassa-cromwell-workflow</dependency>
                            </dependenciesToScan>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>enforce-required-niassa-cromwell-properties</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <requireProperty>
                                            <property>wdl-workflow</property>
                                            <message>Url to the WDL file has not been provided.</message>
                                        </requireProperty>
                                    </rules>
                                    <fail>true</fail>
                                </configuration>
                            </execution>
                            <execution>
                                <id>enforce-required-run-test-properties</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <skip>${skipWorkflowRunITs}</skip>
                                    <skip>${skipITs}</skip>
                                    <rules>
                                        <requireProperty>
                                            <property>seqwareDistribution</property>
                                            <message>seqwareDistribution property is missing</message>
                                        </requireProperty>
                                        <requireProperty>
                                            <property>workingDirectory</property>
                                            <message>workingDirectory property is missing</message>
                                        </requireProperty>
                                        <requireProperty>
                                            <property>webserviceUrl</property>
                                            <message>webserviceUrl property is missing</message>
                                        </requireProperty>
                                        <requireProperty>
                                            <property>webserviceUser</property>
                                            <message>webserviceUser property is missing</message>
                                        </requireProperty>
                                        <requireProperty>
                                            <property>webservicePassword</property>
                                            <message>webservicePassword property is missing</message>
                                        </requireProperty>
                                        <requireProperty>
                                            <property>schedulingSystem</property>
                                            <message>schedulingSystem property is missing</message>
                                        </requireProperty>
                                        <requireProperty>
                                            <property>schedulingHost</property>
                                            <message>schedulingHost property is missing</message>
                                        </requireProperty>
                                    </rules>
                                    <fail>true</fail>
                                </configuration>
                            </execution>
                            <execution>
                                <id>check-wdl-workflow-exists</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <phase>process-resources</phase>
                                <configuration>
                                    <rules>
                                        <requireFilesExist>
                                            <files>
                                                <file>
                                                    ${bundleDirectory}/lib/${wdl-workflow}
                                                </file>
                                            </files>
                                        </requireFilesExist>
                                    </rules>
                                </configuration>
                            </execution>
                            <execution>
                                <!-- seqware bundle overwrites files by default -->
                                <id>check-package-does-not-exist</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <phase>deploy</phase>
                                <configuration>
                                    <rules>
                                        <requireProperty>
                                            <property>releaseDirectory</property>
                                            <message>releaseDirectory property is missing</message>
                                        </requireProperty>
                                        <requireFilesDontExist>
                                            <files>
                                                <file>
                                                    ${releaseDirectory}/Workflow_Bundle_${workflow-name}_${project.version}_SeqWare_${seqware-version}.zip
                                                </file>
                                            </files>
                                        </requireFilesDontExist>
                                    </rules>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <skip>${skipITs}</skip>
                            <systemPropertyVariables>
                                <bundledJava>${bundleDirectory}/bin/jre${jre-version}/bin/java</bundledJava>
                                <bundleDirectory>${bundleDirectory}</bundleDirectory>
                                <bundledBinPath>${bundleDirectory}/bin/</bundledBinPath>
                                <bundledWorkflow>
                                    ${project.build.directory}/Workflow_Bundle_${workflow-name}_${project.version}_SeqWare_${seqware-version}/
                                </bundledWorkflow>
                                <workflowName>${workflow-name}</workflowName>
                                <workflowVersion>${project.version}</workflowVersion>

                                <!-- required to create seqware settings -->
                                <seqwareDistribution>${seqwareDistribution}</seqwareDistribution>
                                <workingDirectory>${workingDirectory}</workingDirectory>
                                <webserviceUrl>${webserviceUrl}</webserviceUrl>
                                <webserviceUser>${webserviceUser}</webserviceUser>
                                <webservicePassword>${webservicePassword}</webservicePassword>
                                <schedulingSystem>${schedulingSystem}</schedulingSystem>
                                <schedulingHost>${schedulingHost}</schedulingHost>
                            </systemPropertyVariables>
                        </configuration>
                        <executions>
                            <execution>
                                <id>integration tests</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>integration-test</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>run-test</id>
                                <goals>
                                    <goal>integration-test</goal>
                                </goals>
                                <phase>integration-test</phase>
                                <configuration>
                                    <skip>${skipWorkflowRunITs}</skip>
                                    <failIfNoTests>true</failIfNoTests>
                                    <suiteXmlFiles>
                                        <suiteXmlFile>${testSuite}</suiteXmlFile>
                                    </suiteXmlFiles>
                                    <printSummary>false</printSummary>
                                    <properties>
                                        <property>
                                            <name>usedefaultlisteners</name>
                                            <key>false</key>
                                        </property>
                                        <property>
                                            <name>listener</name>
                                            <value>ca.on.oicr.pde.testing.testng.TestCaseReporter</value>
                                        </property>
                                    </properties>
                                </configuration>
                            </execution>
                            <execution>
                                <id>verify</id>
                                <goals>
                                    <goal>verify</goal>
                                </goals>
                                <phase>verify</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>recursive_executable</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>chmod</executable>
                                    <commandlineArgs>-R 755 ${bundleDirectory}/bin</commandlineArgs>
                                </configuration>
                            </execution>
                            <execution>
                                <id>zip-bundle</id>
                                <phase>deploy</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${bundleDirectory}/bin/jre${jre-version}/bin/java</executable>
                                    <commandlineArgs>-jar
                                        ${project.build.directory}/Workflow_Bundle_${workflow-name}_${project.version}_SeqWare_${seqware-version}/Workflow_Bundle_${workflow-name}/${project.version}/lib/seqware-distribution-${seqware-version}-full.jar
                                        --plugin net.sourceforge.seqware.pipeline.plugins.BundleManager -- --bundle
                                        ${releaseDirectory} --path-to-package
                                        ${project.build.directory}/Workflow_Bundle_${workflow-name}_${project.version}_SeqWare_${seqware-version}/
                                    </commandlineArgs>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-deploy-plugin</artifactId>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>default-jar</id>
                                <phase/>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-install-plugin</artifactId>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>